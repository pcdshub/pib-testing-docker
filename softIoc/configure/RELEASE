# RELEASE - Location of external support modules
#
# IF YOU CHANGE ANY PATHS in this file or make API changes to
# any modules it refers to, you should do a "make rebuild" in
# this application's top level directory.
#
# The EPICS build process does not check dependencies against
# any files from outside the application, so it is safest to
# rebuild it completely if any modules it depends on change.
#
# Host- or target-specific settings can be given in files named
#  RELEASE.$(EPICS_HOST_ARCH).Common
#  RELEASE.Common.$(T_A)
#  RELEASE.$(EPICS_HOST_ARCH).$(T_A)
#
# This file is parsed by both GNUmake and an EPICS Perl script,
# so it may ONLY contain definititions of paths to other support
# modules, variable definitions that are used in module paths,
# and include statements that pull in other RELEASE files.
# Variables may be used before their values have been set.
# Build variables that are NOT used in paths should be set in
# the CONFIG_SITE file.

# If using the sequencer, point SNCSEQ at its top directory:
ASYN=/cds/group/pcds/epics/R7.0.2-2.0/modules/asyn/R2.2.4-1.2
IOCADMIN=/cds/group/pcds/epics/R7.0.2-2.0/modules/iocAdmin/R3.1.16-1.3.2
SNCSEQ=/cds/group/pcds/epics/R7.0.2-2.0/modules/seq/R2.2.4-1.2
CALC=/cds/group/pcds/epics/R7.0.2-2.0/modules/calc/R3.7-1.0.1

# EPICS_BASE should appear last so earlier modules can override stuff:
EPICS_BASE=/cds/group/pcds/epics/base/R7.0.2-2.0

# Set RULES here if you want to use build rules from somewhere
# other than EPICS_BASE:
#RULES = $(MODULES)/build-rules

# These lines allow developers to override these RELEASE settings
# without having to modify this file directly.
-include $(TOP)/../RELEASE.local
-include $(TOP)/../RELEASE.$(EPICS_HOST_ARCH).local
-include $(TOP)/configure/RELEASE.local
