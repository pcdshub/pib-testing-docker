# syntax=docker/dockerfile:1.4
# vi: syntax=Dockerfile

ARG EPICS_BASE_IMAGE_TAG=

FROM pcdshub/pcds-epics-base-rhel7:${EPICS_BASE_IMAGE_TAG}

RUN micromamba install jq

ARG MACRO_VERSION=R0.3.1
RUN git clone --depth 1 --branch=${MACRO_VERSION} \
        https://github.com/pcdshub/ioc-template-macros \
        /reg/g/pcds/controls/macro/

# TODO for development pre-install deps (TODO remove me)
COPY --chown=docker ./pcds_ioc_builder/requirements.txt requirements.txt
RUN python -m pip install -r requirements.txt

COPY --chown=docker ./pcds_ioc_builder /cds/home/docker/pcds-ioc-builder
RUN python -m pip install ~/pcds-ioc-builder && rm -rf ~/pcds-ioc-builder

WORKDIR /spec

ARG SPECS=
# TODO remove; set in previous build
COPY --chown=docker ${SPECS}/*.yaml /spec/

ENV IOC_SPEC_FILES="/spec/base.yaml /spec/modules.yaml"

RUN echo "pcds-ioc-builder download" >> ~/.bash_history
RUN echo "pcds-ioc-builder build --sync" >> ~/.bash_history
RUN echo "micromamba install \$(pcds-ioc-builder summarize --requirements | jq -r '.conda | join(\" \")')" >> ~/.bash_history

RUN pcds-ioc-builder summarize

RUN YUM_REQS=$(pcds-ioc-builder summarize --requirements | jq -r '.yum | join(" ")') && \
      if [ -n "$YUM_REQS" ]; then \
        echo "Installing yum requirements: ${CONDA_REQS}"; \
        sudo yum -y install ${YUM_REQS}; \
      fi

RUN CONDA_REQS=$(pcds-ioc-builder summarize --requirements | jq -r '.conda | join(" ")') && \
      if [ -n "$CONDA_REQS" ]; then \
        echo "Installing conda requirements: ${CONDA_REQS}"; \
        micromamba install ${CONDA_REQS}; \
      fi

RUN pcds-ioc-builder download /spec/*.yaml --skip EPICS_BASE
RUN pcds-ioc-builder sync /spec/*.yaml --skip EPICS_BASE
RUN pcds-ioc-builder build --sync /spec/*.yaml --skip EPICS_BASE

# COPY --chown=docker ./softIoc /ioc
# COPY --chown=docker ../ads-ioc /ioc
COPY --chown=docker test-iocs/ioc-mfx-tfs-lens/ /ioc

RUN echo "pcds-ioc-builder --log=DEBUG inspect . /spec/*.yaml --output build.yaml" >> ~/.bash_history
RUN echo "pcds-ioc-builder --log=DEBUG build --sync /spec/*.yaml ./build.yaml --skip EPICS_BASE" >> ~/.bash_history
WORKDIR /ioc
RUN pcds-ioc-builder --log=DEBUG inspect . /spec/*.yaml --output build.yaml || /bin/true
# RUN pcds-ioc-builder --log=DEBUG build --sync /spec/*.yaml ./build.yaml --skip EPICS_BASE
